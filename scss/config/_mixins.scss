// Media query mixin
@mixin mq($value) {
	@if not map-has-key($breakpoints, $value) {
		@media screen and (min-width: $value) {
			@content;
		}
	} @else {
		@media screen and (min-width: map-get($breakpoints, $value)) {
			@content;
		}
	}
}

@mixin container {
	max-width: $max-width;
	padding  : 0 $container-padding;
	margin   : 0 auto;
	display  : flex;
	flex-wrap: wrap;
}

@mixin grid-system {
	display: grid;
	grid-template-columns: repeat($columns, 1fr);
	grid-gap: var(--grid-gap);
	width: 100%;
}

@mixin box-shadow {
	box-shadow: 0px 10px 10px 0px rgba(0, 0, 0, 0.05);
}

@mixin burger-menu(
	$width: 40px, 
	$height: 5px, 
	$color: var(--text-emphasis-medium),
	$br-radius: 3px,
	$transition-time: .3s
) {
	width: $width;
	height: $height;
	background: $color;
	border-radius: $br-radius;
	transition: all $transition-time ease-in-out;
}

@mixin reset {
	margin: 0;
	padding: 0;
}

@mixin columns($class-name, $num-columns: $columns) {
	@for $i from 1 through $num-columns {
		@if $i > 0 and $i <= $num-columns {
			.#{$class-name}-#{$i} {
				grid-column: span #{$i};
			}
		}
	}
}

@mixin width-sizes {
  @for $i from 1 through 10 {
		&-#{$i * 10} {
			width: #{$i * 10%};
		}
	}
}

@mixin card {
  padding: 2rem;
  background: var(--surface-high);
  border-radius: $border-radius;
  @include box-shadow();
}

@mixin width-height($size) {
  width: $size;
  height: $size;
}